# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: Â© 2023 Aalto University

name: Build_pypi_wheels

on:
  push:
    branches: [ "*stable", "wheel_building", "cuda_pypi_build" ]
    tags: [ "*rc*"]

jobs:
  build_pypi_binary_wheels:
    name: Build wheels on ${{ matrix.os }} for ${{ matrix.platform }} ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-11]
        platform: [manylinux, musllinux, macosx]
        arch: [x86_64, arm64, aarch64, universal2]
        exclude:
          - os: macos-11
            platform: manylinux
          - os: macos-11
            platform: musllinux
          - os: macos-11
            arch: aarch64
          - os: ubuntu-20.04
            platform: macosx
          - os: ubuntu-20.04
            arch: arm64
          - os: ubuntu-20.04
            arch: universal2

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '3.9'

      - name: Set up QEMU
        if: runner.os == 'Linux' && matrix.arch == 'aarch64'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.11.2
        env:
          CIBW_ARCHS_LINUX: ${{ matrix.arch }}
          CIBW_ARCHS_MACOS: ${{ matrix.arch }}
          CIBW_BUILD: "*-${{ matrix.platform }}*"
          CIBW_BUILD_VERBOSITY: 2

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
          name: dist

  build_pypi_cuda_wheels:
    name: Build CUDA 11 wheels for manylinux x64
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '3.9'

      - name: Set up QEMU
        if: runner.os == 'Linux' && matrix.arch == 'aarch64'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.11.2
        env:
          CIBW_ARCHS_LINUX: x86_64
          CIBW_BUILD: "*-manylinux*"
          CIBW_BUILD_VERBOSITY: 2
          CIBW_BEFORE_ALL_LINUX: >
            curl -o installer.run -s https://developer.download.nvidia.com/compute/cuda/11.1.1/local_installers/cuda_11.1.1_455.32.00_linux.run &&
            /bin/sh ./installer.run --toolkit --silent
          CIBW_ENVIRONMENT_LINUX: PATH=/usr/local/cuda/bin:$PATH
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
          name: dist-cuda

  build_pypi_source_dist:
    name: Build source distribution package for PyPI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '3.9'

      - name: Setup build environment
        run: pip install build

      - name: Build sdist
        run: python -m build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: ./dist/*.tar.gz
          name: dist

  upload_pypi_wheels:
    name: Upload wheels to PyPI
    runs-on: ubuntu-latest
    if: contains(github.ref, 'stable')
    needs:
      - build_pypi_binary_wheels
      - build_pypi_source_dist
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: ./dist/
      - uses: pypa/gh-action-pypi-publish@release/v1
        name: Upload to PyPI
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip_existing: true
